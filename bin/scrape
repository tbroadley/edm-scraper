#!/usr/bin/env ruby

require 'capybara'
require 'capybara/dsl'
require 'capybara/poltergeist'

require_relative '../environment'

include Capybara::DSL

Capybara.register_driver :poltergeist do |app|
  Capybara::Poltergeist::Driver.new(app, js_errors: false)
end

Capybara.default_driver = :poltergeist
Capybara.default_max_wait_time = 0.1

send_email_if_rescue('scrape') do
  visit('http://www.edmcanada.com/toronto/')

  all('.main-content [data-block-type="2"] p:first-child').each do |element|
    next if element.text.start_with?('Support EDM Canada')

    link = element.first('a')
    url = link ? link[:href] : nil

    match = /(.*) - (.*) @ (.*)/.match(element.text)
    if match.nil?
      raise "Element with text '#{element.text}' does not match expected format (name - date @ venue)"
    end

    date_string, name, venue = match.captures

    start_date_string, end_date_string = date_string.split(' - ')
    start_date = parse_date_string(start_date_string)
    end_date = parse_date_string(end_date_string || start_date_string)

    show = Show.new(name: name, venue: venue, start_date: start_date, end_date: end_date, url: url, filter: false)
    puts show.save ? "Added new show: '#{show}'" : "Show '#{show}' already exists in database"
  end
end
