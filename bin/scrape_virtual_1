#!/usr/bin/env ruby
# frozen_string_literal: true

require 'capybara'
require 'capybara/dsl'
require 'capybara/poltergeist'

require_relative '../environment'

include Capybara::DSL

NAME_CSS = 'span[style="text-decoration: underline;"] > strong'

Capybara.register_driver :poltergeist do |app|
  Capybara::Poltergeist::Driver.new(app, js_errors: false, phantomjs_options: [
                                      '--ssl-protocol=tlsv1.2',
                                    ])
end

Capybara.default_driver = :poltergeist
Capybara.default_max_wait_time = 0

def create_show(name)
  show = Show.new(
    name: name,
    start_date: Date.today + 1,
    end_date: Date.today + 2,
    venue: 'Online',
    filter: false
  )
  puts show.save_and_return_message
end

def maybe_create_show(element)
  return unless element.has_css?(NAME_CSS)

  name_element = element.first(NAME_CSS)
  name = name_element.text.strip

  return unless Show.find_by(name: name).nil?

  create_show(name)
end

in_live_stream_section = false

send_email_if_rescue('scrape_virtual_1') do
  visit('https://www.iheartraves.com/blogs/post/edm-live-streams')

  all('.article__body-inner > *').each do |element|
    if element.tag_name == 'h3' &&
       element.text.strip.casecmp?('upcoming festival live streams')
      in_live_stream_section = true
      next
    end

    next unless in_live_stream_section

    next if element.text.strip.empty?

    if element.tag_name == 'h3' &&
       element.text.strip.casecmp?("weekly artist's live streams")
      break
    end

    maybe_create_show(element)
  end
end
